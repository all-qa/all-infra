apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kompose.cmd: /snap/kompose/19/kompose-linux-amd64 convert -f docker-compose.yaml
    kompose.version: 1.21.0 (992df58d8)
  creationTimestamp: null
  labels:
    io.kompose.service: sonarqube
  name: sonarqube
spec:
  replicas: 1
  selector:
    matchLabels:
      io.kompose.service: sonarqube
  strategy:
    type: Recreate
  template:
    metadata:
      annotations:
        kompose.cmd: /snap/kompose/19/kompose-linux-amd64 convert -f docker-compose.yaml
        kompose.version: 1.21.0 (992df58d8)
      creationTimestamp: null
      labels:
        io.kompose.service: sonarqube
    spec:
      containers:
      - env:
        - name: SONAR_JDBC_PASSWORD
          value: sonar
        - name: SONAR_JDBC_URL
          value: jdbc:postgresql://db:5432/sonar
        - name: SONAR_JDBC_USERNAME
          value: sonar
        image: sonarqube:community
        imagePullPolicy: ""
        name: sonarqube
        ports:
        - containerPort: 9000
        resources: {}
        volumeMounts:
        - mountPath: /opt/sonarqube/data
          name: sonarqube-data
        - mountPath: /opt/sonarqube/extensions
          name: sonarqube-extensions
        - mountPath: /opt/sonarqube/logs
          name: sonarqube-logs
      restartPolicy: Always
      serviceAccountName: ""
      volumes:
      - name: sonarqube-data
        persistentVolumeClaim:
          claimName: sonarqube-data
      - name: sonarqube-extensions
        persistentVolumeClaim:
          claimName: sonarqube-extensions
      - name: sonarqube-logs
        persistentVolumeClaim:
          claimName: sonarqube-logs
status: {}
